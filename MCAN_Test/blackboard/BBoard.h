/** @file BBoard.h
*
* @brief Declares a C++ class containing static accessor functions for blackboard variables
*
* @par
* Copyright (c) 2021 Sunrise Labs, Inc.
* All rights reserved.
*/

#ifndef BBOARD_H
#define BBOARD_H

#include "blackboard.h"

namespace bb
{

class BBoard
{

public:


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// *** AUTOGENERATED BY BBGEN.  DO NOT EDIT THIS SECTION: BB_CPP_DECL


/// @brief Auto-generated Blackboard CPP declaration for the SCM (type = BB_CPP_DECL) subsystem.

   static float32_T get_SCM_motor1Acceleration();
   static void set_SCM_motor1Acceleration(const float32_T value);

   static float32_T get_SCM_motor1Deceleration();
   static void set_SCM_motor1Deceleration(const float32_T value);

   static float32_T get_SCM_motor1MaxSpeed();
   static void set_SCM_motor1MaxSpeed(const float32_T value);

   static float32_T get_SCM_motor1MinSpeed();
   static void set_SCM_motor1MinSpeed(const float32_T value);

   static int8_t get_SCM_Motor1Control();
   static void set_SCM_Motor1Control(const int8_t value);

   static int8_t get_SCM_Motor2Control();
   static void set_SCM_Motor2Control(const int8_t value);

   static int8_t get_SCM_Motor3Control();
   static void set_SCM_Motor3Control(const int8_t value);

   static int8_t get_RCM_ModuleId();
   static void set_RCM_ModuleId(const int8_t value);

   static float32_T get_RCM_Sensor1Voltage();
   static void set_RCM_Sensor1Voltage(const float32_T value);

   static float32_T get_RCM_Sensor1Temperature();
   static void set_RCM_Sensor1Temperature(const float32_T value);

   static float32_T get_RCM_Sensor1Foo();
   static void set_RCM_Sensor1Foo(const float32_T value);

   static float32_T get_RCM_Sensor1Bar();
   static void set_RCM_Sensor1Bar(const float32_T value);


// *** AUTOGENERATED BY BBGEN.  DO NOT EDIT THIS SECTION: BB_CPP_DECL
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

};

}

#endif // BLACKBOARD_H
